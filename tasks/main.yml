---
# postfix_relay_client/tasks/main.yml

- name: Check for OS specific var files
  # local_action: stat path="{{ item }}"
  ansible.builtin.stat:
    path: "{{ item }}"
  # connection: local
  with_items:
    - "{{ role_path | default('/norule') }}/vars/{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version }}.yml"
  register: _st
  # become: no
  delegate_to: localhost

- name: "Postfix_relay_client | include_vars from os specific vars file"
  ansible.builtin.include_vars: "{{ item.item }}"
  with_items: "{{ _st.results }}"
  when: item.stat.exists
  loop_control:
    label: "{{ item.invocation.module_args.path }}"

- name: Install postfix
  ansible.builtin.package:
    name:
      - postfix
      - "{{ package_name_mail }}"
    state: present

- name: Run postfix configuration (without backrefs)
  ansible.builtin.lineinfile:
    dest: /etc/postfix/main.cf
    backup: true
    backrefs: false
    line: "{{ item.line }}"
    regexp: "{{ item.regexp }}"
  with_items:
    - {line: 'myorigin = {{ postfix_relay_client_relayhost_myorigin }}', regexp: '^myorigin.*$'}
    - {line: 'relayhost = [{{ postfix_relay_client_relayhost }}]:{{ postfix_relay_client_relayhost_port }}', regexp: '^relayhost.*$'}
    - {line: 'mydestination = ', regexp: '^mydestination.*$'}
  notify: Reload_postfix

- name: Run postfix configuration (with backrefs)
  ansible.builtin.lineinfile:
    dest: /etc/postfix/main.cf
    backup: true
    backrefs: true
    line: "{{ item.line }}"
    regexp: "{{ item.regexp }}"
  with_items:
    - {line: '\1 127.0.0.0/8', regexp: '(^mynetworks =([\"\s]+(?!127\.0\.0\.0\/8)[\w=\[\]\:\/\-\.]+)*)\s*$'}
    - {line: '\1 [::ffff:127.0.0.0]/104', regexp: '(^mynetworks =([\"\s]+(?!\[\:\:ffff\:127\.0\.0\.0\]\/104)[\w=\[\]\:\/\-\.]+)*)\s*$'}
    - {line: '\1 [::1]/128', regexp: '(^mynetworks =([\"\s]+(?!\[\:\:1\]\/128)[\w=\[\]\:\/\-\.]+)*)\s*$'}
  notify: Reload_postfix

- name: Do sasl configuration for smtp with authentication
  when: postfix_relay_client_relayhost_user | length > 0
  block:
    - name: Install cyrus-sasl libs
      ansible.builtin.package:
        name: cyrus-sasl-plain

    - name: Define pw for postfix remote relay
      ansible.builtin.lineinfile:
        create: true
        path: /etc/postfix/sasl_passwd
        regexp: '^{{ postfix_relay_client_relayhost }}.*'
        line: '{{ postfix_relay_client_relayhost }} {{ postfix_relay_client_relayhost_user }}:{{ postfix_relay_client_relayhost_password }}'
        owner: root
        group: root
        mode: '600'
      no_log: true
      notify: Postmap_sasl_password

    - name: Define tls policy for relay server
      ansible.builtin.lineinfile:
        create: true
        path: /etc/postfix/tls_policy
        regexp: '^\[{{ postfix_relay_client_relayhost }}\].*'
        line: '[{{ postfix_relay_client_relayhost }}]:{{ postfix_relay_client_relayhost_port }} encrypt'
        owner: root
        group: root
        mode: '600'
      notify: Postmap_tls_policy

    - name: Run postfix configuration (without backrefs)
      ansible.builtin.lineinfile:
        dest: /etc/postfix/main.cf
        backup: true
        backrefs: false
        line: "{{ item.line }}"
        regexp: "{{ item.regexp }}"
      with_items:
        - {line: 'smtp_use_tls = yes', regexp: '^smtp_use_tls.*$'}
        - {line: 'smtp_sasl_auth_enable = yes', regexp: '^smtp_sasl_auth_enable.*$'}
        - {line: 'smtp_sasl_security_options = noanonymous', regexp: '^smtp_sasl_security_options.*$'}
        - {line: 'smtp_sasl_password_maps = hash:/etc/postfix/sasl_passwd', regexp: '^smtp_sasl_password_maps.*$'}
      notify: Reload_postfix

- name: meta flush handlers
  ansible.builtin.meta: flush_handlers

- name: Enable and start postfix service
  ansible.builtin.service:
    name: postfix
    state: started
    enabled: true
